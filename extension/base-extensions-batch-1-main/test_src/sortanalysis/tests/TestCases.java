package sortanalysis.tests;

import java.util.Arrays;
import java.util.Collection;
import java.util.LinkedList;

/**
 * @author Dennis Cosgrove (http://www.cse.wustl.edu/~cosgroved/)
 */
public class TestCases {
	public static Collection<Object[]> getConstructorArguments() {
		Collection<Object[]> args = new LinkedList<>();
		
		args.add(new Object[] { Arrays.asList(1, 2, 3, 4, 5), "Input: 1 2 3 4 5 \nSorted: 1 2 3 4 5 \nMean: 3.0\nMedian: 3.0\nMin: 1\nMax: 5\nRange: 4\n" });
		args.add(new Object[] { Arrays.asList(3, 4, 1, 5, 2), "Input: 3 4 1 5 2 \nSorted: 1 2 3 4 5 \nMean: 3.0\nMedian: 3.0\nMin: 1\nMax: 5\nRange: 4\n" });
		args.add(new Object[] { Arrays.asList(131), "Input: 131 \nSorted: 131 \nMean: 131.0\nMedian: 131.0\nMin: 131\nMax: 131\nRange: 0\n" });
		args.add(new Object[] { Arrays.asList(131, 231, 425), "Input: 131 231 425 \nSorted: 131 231 425 \nMean: 262.3333333333333\nMedian: 231.0\nMin: 131\nMax: 425\nRange: 294\n" });
		args.add(new Object[] { Arrays.asList(231, 425, 131), "Input: 231 425 131 \nSorted: 131 231 425 \nMean: 262.3333333333333\nMedian: 231.0\nMin: 131\nMax: 425\nRange: 294\n" });
		args.add(new Object[] { Arrays.asList(99, 66, 4), "Input: 99 66 4 \nSorted: 4 66 99 \nMean: 56.333333333333336\nMedian: 66.0\nMin: 4\nMax: 99\nRange: 95\n" });
		args.add(new Object[] { Arrays.asList(131, 231), "Input: 131 231 \nSorted: 131 231 \nMean: 181.0\nMedian: 181.0\nMin: 131\nMax: 231\nRange: 100\n" });
		args.add(new Object[] { Arrays.asList(231, 131), "Input: 231 131 \nSorted: 131 231 \nMean: 181.0\nMedian: 181.0\nMin: 131\nMax: 231\nRange: 100\n" });
		args.add(new Object[] { Arrays.asList(8, 6, 7, 5, 3, 0, 9), "Input: 8 6 7 5 3 0 9 \nSorted: 0 3 5 6 7 8 9 \nMean: 5.428571428571429\nMedian: 6.0\nMin: 0\nMax: 9\nRange: 9\n" });
		args.add(new Object[] { Arrays.asList(7, 7, 7, 93, 11), "Input: 7 7 7 93 11 \nSorted: 7 7 7 11 93 \nMean: 25.0\nMedian: 7.0\nMin: 7\nMax: 93\nRange: 86\n" });
		args.add(new Object[] { Arrays.asList(66, 18, -80, -15, 74, -70, -74, -19, 92, -55, 68, -19, -41, -39, 84, -90, -22, -49, 49, 22, -100, -23, 48, 26, -38, -25, -98, -63, 64, 92, -20, -7, -9, 31, 8, 60, -92, -94, -10, -10, -40, 86, 43, 38, 84, 1, -54, 63, -75, -43, -33, -86, 77, -10, -72, 57, 26, -16, 60, -46, 32, 3, 99, -58, 17, -84, 78, 37, -59, 33, -8, 48, 69, 40, -39, 11, 88, -52, -13, 77, 49, 38, 29, 37, -56, 44, 13, 43, 12, 56, -54, -96, 82, 64, 88, -62, -25, -43, -51, 24, -63, 10), "Input: 66 18 -80 -15 74 -70 -74 -19 92 -55 68 -19 -41 -39 84 -90 -22 -49 49 22 -100 -23 48 26 -38 -25 -98 -63 64 92 -20 -7 -9 31 8 60 -92 -94 -10 -10 -40 86 43 38 84 1 -54 63 -75 -43 -33 -86 77 -10 -72 57 26 -16 60 -46 32 3 99 -58 17 -84 78 37 -59 33 -8 48 69 40 -39 11 88 -52 -13 77 49 38 29 37 -56 44 13 43 12 56 -54 -96 82 64 88 -62 -25 -43 -51 24 -63 10 \nSorted: -100 -98 -96 -94 -92 -90 -86 -84 -80 -75 -74 -72 -70 -63 -63 -62 -59 -58 -56 -55 -54 -54 -52 -51 -49 -46 -43 -43 -41 -40 -39 -39 -38 -33 -25 -25 -23 -22 -20 -19 -19 -16 -15 -13 -10 -10 -10 -9 -8 -7 1 3 8 10 11 12 13 17 18 22 24 26 26 29 31 32 33 37 37 38 38 40 43 43 44 48 48 49 49 56 57 60 60 63 64 64 66 68 69 74 77 77 78 82 84 84 86 88 88 92 92 99 \nMean: 1.5490196078431373\nMedian: 2.0\nMin: -100\nMax: 99\nRange: 199\n" });
		args.add(new Object[] { Arrays.asList(79, 20, 19, -47, -49, 73, -57, 35, -27, -31, 60, -42, 53, 23, -34, 74, -93, -5, -45, 6, -82, -70, -66, 21, 35, -77, 70, -70, 9, 69, 50, 50, 78, -92, -93, 16, 22, -38, 86, -89, -62, 90, 44, -24, 13, -33, 96, -77, 54, -5, -91, 26, -46, -4, 34, 32, -70, 57, 34, 33, 53, -77), "Input: 79 20 19 -47 -49 73 -57 35 -27 -31 60 -42 53 23 -34 74 -93 -5 -45 6 -82 -70 -66 21 35 -77 70 -70 9 69 50 50 78 -92 -93 16 22 -38 86 -89 -62 90 44 -24 13 -33 96 -77 54 -5 -91 26 -46 -4 34 32 -70 57 34 33 53 -77 \nSorted: -93 -93 -92 -91 -89 -82 -77 -77 -77 -70 -70 -70 -66 -62 -57 -49 -47 -46 -45 -42 -38 -34 -33 -31 -27 -24 -5 -5 -4 6 9 13 16 19 20 21 22 23 26 32 33 34 34 35 35 44 50 50 53 53 54 57 60 69 70 73 74 78 79 86 90 96 \nMean: -1.3225806451612903\nMedian: 11.0\nMin: -93\nMax: 96\nRange: 189\n" });
		args.add(new Object[] { Arrays.asList(-77, -86, -82, -28, -86, 4, 87, -100, -86, 65, -25, -54, 45, -87, 77, 55, -68, -40, 41, -94, 34, -56, -91, -33, -76, -98, -18, 31, 21, -34, -72, 36, -26, 94, 25, -39, 67, -91, 35, -59, -72, 46, -3, 26, -70, 5, 19, -2, -38, 28, 89, -19, -52, 34, 95, -95, 54, 17, -90, 47, 76, 10, 97, 71, 32, 47, -57, -80, -18, 77, 4, -11, 22, -68, 63, 96, -77, 77, -17, -22, 24, 39, 22, 84, -46, 5), "Input: -77 -86 -82 -28 -86 4 87 -100 -86 65 -25 -54 45 -87 77 55 -68 -40 41 -94 34 -56 -91 -33 -76 -98 -18 31 21 -34 -72 36 -26 94 25 -39 67 -91 35 -59 -72 46 -3 26 -70 5 19 -2 -38 28 89 -19 -52 34 95 -95 54 17 -90 47 76 10 97 71 32 47 -57 -80 -18 77 4 -11 22 -68 63 96 -77 77 -17 -22 24 39 22 84 -46 5 \nSorted: -100 -98 -95 -94 -91 -91 -90 -87 -86 -86 -86 -82 -80 -77 -77 -76 -72 -72 -70 -68 -68 -59 -57 -56 -54 -52 -46 -40 -39 -38 -34 -33 -28 -26 -25 -22 -19 -18 -18 -17 -11 -3 -2 4 4 5 5 10 17 19 21 22 22 24 25 26 28 31 32 34 34 35 36 39 41 45 46 47 47 54 55 63 65 67 71 76 77 77 77 84 87 89 94 95 96 97 \nMean: -4.883720930232558\nMedian: 1.0\nMin: -100\nMax: 97\nRange: 197\n" });
		args.add(new Object[] { Arrays.asList(13, 89, 72, 60, 16, 96, -44, -96, -96, 51, 1, -36, 44, -64, 9, 37, -55, -65, -23, 82, -48, 75, 77, 51, -18, -70, -99, -67, 49, 1, -42, 50, 94, 81, 62, -59, 60, -50, -24, 19, -76, 93, 0, -83, 88, -27, -37, 82, 5, -17, 78, -63, 30, -8, 2, -75, -98, 45, -15, 1, 90, -83, -48, 74, 81, 18, -16, 52, 64, -7, -38, -92, 94, -70, 47, 93, 25, 57, 97, 47, 84, -30, -38, 73, 70, -4, -49, -41, -81, 60, -56, 47, 89, -14, -33, -43, -23, 40, -30, 30, -32), "Input: 13 89 72 60 16 96 -44 -96 -96 51 1 -36 44 -64 9 37 -55 -65 -23 82 -48 75 77 51 -18 -70 -99 -67 49 1 -42 50 94 81 62 -59 60 -50 -24 19 -76 93 0 -83 88 -27 -37 82 5 -17 78 -63 30 -8 2 -75 -98 45 -15 1 90 -83 -48 74 81 18 -16 52 64 -7 -38 -92 94 -70 47 93 25 57 97 47 84 -30 -38 73 70 -4 -49 -41 -81 60 -56 47 89 -14 -33 -43 -23 40 -30 30 -32 \nSorted: -99 -98 -96 -96 -92 -83 -83 -81 -76 -75 -70 -70 -67 -65 -64 -63 -59 -56 -55 -50 -49 -48 -48 -44 -43 -42 -41 -38 -38 -37 -36 -33 -32 -30 -30 -27 -24 -23 -23 -18 -17 -16 -15 -14 -8 -7 -4 0 1 1 1 2 5 9 13 16 18 19 25 30 30 37 40 44 45 47 47 47 49 50 51 51 52 57 60 60 60 62 64 70 72 73 74 75 77 78 81 81 82 82 84 88 89 89 90 93 93 94 94 96 97 \nMean: 6.554455445544554\nMedian: 1.0\nMin: -99\nMax: 97\nRange: 196\n" });
		args.add(new Object[] { Arrays.asList(-58, -15, -37, 28, -94, -95, 11, 80, -34, 0, 26, -83, -41, -66, 67, 52, 80, 55, 60, 27, 37, 26, -77, -93, 87, -59, -38, -8, -1, -10, 64, -78, 41, 37, -2, 9, 15, 61, 99, -27, 14, 73, -28, 83, 65, 91, -93, -5, -31, -33, -70, 78, 46, 15, 84, -42, 76, 0, 41, -19, -60, 65, -4, 87, 6, 11, 99, 36, 0, -84, -61, 29, -10, -26, 85, -80, -34, -44, 40, -9, -58), "Input: -58 -15 -37 28 -94 -95 11 80 -34 0 26 -83 -41 -66 67 52 80 55 60 27 37 26 -77 -93 87 -59 -38 -8 -1 -10 64 -78 41 37 -2 9 15 61 99 -27 14 73 -28 83 65 91 -93 -5 -31 -33 -70 78 46 15 84 -42 76 0 41 -19 -60 65 -4 87 6 11 99 36 0 -84 -61 29 -10 -26 85 -80 -34 -44 40 -9 -58 \nSorted: -95 -94 -93 -93 -84 -83 -80 -78 -77 -70 -66 -61 -60 -59 -58 -58 -44 -42 -41 -38 -37 -34 -34 -33 -31 -28 -27 -26 -19 -15 -10 -10 -9 -8 -5 -4 -2 -1 0 0 0 6 9 11 11 14 15 15 26 26 27 28 29 36 37 37 40 41 41 46 52 55 60 61 64 65 65 67 73 76 78 80 80 83 84 85 87 87 91 99 99 \nMean: 4.679012345679013\nMedian: 0.0\nMin: -95\nMax: 99\nRange: 194\n" });
		args.add(new Object[] { Arrays.asList(-28, 26, -100, 17, 80, -59, 2, -40, 57, 68, 29), "Input: -28 26 -100 17 80 -59 2 -40 57 68 29 \nSorted: -100 -59 -40 -28 2 17 26 29 57 68 80 \nMean: 4.7272727272727275\nMedian: 17.0\nMin: -100\nMax: 80\nRange: 180\n" });
		args.add(new Object[] { Arrays.asList(-16, -78, -8, 1, 15, 49, 74, 2, 7, -68, -64, -53, 65, 17, 32, -82, -33, 26, 11, -4, -10, -38, 94, 29, 75, -68, 94, -37, 55, 71, 21, -34, -32, -1, -59, -94, 85, -11, -24, -28), "Input: -16 -78 -8 1 15 49 74 2 7 -68 -64 -53 65 17 32 -82 -33 26 11 -4 -10 -38 94 29 75 -68 94 -37 55 71 21 -34 -32 -1 -59 -94 85 -11 -24 -28 \nSorted: -94 -82 -78 -68 -68 -64 -59 -53 -38 -37 -34 -33 -32 -28 -24 -16 -11 -10 -8 -4 -1 1 2 7 11 15 17 21 26 29 32 49 55 65 71 74 75 85 94 94 \nMean: -0.475\nMedian: -2.5\nMin: -94\nMax: 94\nRange: 188\n" });
		args.add(new Object[] { Arrays.asList(86, -46, 28, 5, 9, 27, -43, 85, 57, -91, 79, -99, -94, 62, -82, 25, 25, 34, 27, 38, -44, -71, -24, 72, 65, 8, -31, 9, 91, 87, 30, 72, -42, 63, -83, -68, -44, 37, -52, -60, -24, 47, 20, -44, 23, -15, -47, 94, -42, -44, 78, 2, -17, -59, -11, 35, -43, -74, -76, -80, -25, -53, 11, 60, -22, 58, 82, 3, -82, 72, -64, 81, -30, 12, -90), "Input: 86 -46 28 5 9 27 -43 85 57 -91 79 -99 -94 62 -82 25 25 34 27 38 -44 -71 -24 72 65 8 -31 9 91 87 30 72 -42 63 -83 -68 -44 37 -52 -60 -24 47 20 -44 23 -15 -47 94 -42 -44 78 2 -17 -59 -11 35 -43 -74 -76 -80 -25 -53 11 60 -22 58 82 3 -82 72 -64 81 -30 12 -90 \nSorted: -99 -94 -91 -90 -83 -82 -82 -80 -76 -74 -71 -68 -64 -60 -59 -53 -52 -47 -46 -44 -44 -44 -44 -43 -43 -42 -42 -31 -30 -25 -24 -24 -22 -17 -15 -11 2 3 5 8 9 9 11 12 20 23 25 25 27 27 28 30 34 35 37 38 47 57 58 60 62 63 65 72 72 72 78 79 81 82 85 86 87 91 94 \nMean: -1.56\nMedian: 3.0\nMin: -99\nMax: 94\nRange: 193\n" });
		args.add(new Object[] { Arrays.asList(4, -21, 9, 61, 41, -33, 38, -48, -14, -92, -95, -33, -49, 81, -82, -74, 94, -9, -32, -12, -20, -70, 87, -27, 92, 72, 44, -16, -19, -38, -39, 52, 21, -65, 27, 76, -60, -81, -55, -21, 19, 35, 79, -82, 75, 23, 19, 93, -78, -8, -40, 30, 25, -24), "Input: 4 -21 9 61 41 -33 38 -48 -14 -92 -95 -33 -49 81 -82 -74 94 -9 -32 -12 -20 -70 87 -27 92 72 44 -16 -19 -38 -39 52 21 -65 27 76 -60 -81 -55 -21 19 35 79 -82 75 23 19 93 -78 -8 -40 30 25 -24 \nSorted: -95 -92 -82 -82 -81 -78 -74 -70 -65 -60 -55 -49 -48 -40 -39 -38 -33 -33 -32 -27 -24 -21 -21 -20 -19 -16 -14 -12 -9 -8 4 9 19 19 21 23 25 27 30 35 38 41 44 52 61 72 75 76 79 81 87 92 93 94 \nMean: -2.5925925925925926\nMedian: -13.0\nMin: -95\nMax: 94\nRange: 189\n" });
		args.add(new Object[] { Arrays.asList(86, -31, 3, -43, 12, -77, 21, 64, 60, 86), "Input: 86 -31 3 -43 12 -77 21 64 60 86 \nSorted: -77 -43 -31 3 12 21 60 64 86 86 \nMean: 18.1\nMedian: 16.5\nMin: -77\nMax: 86\nRange: 163\n" });
		args.add(new Object[] { Arrays.asList(83, 29, -29, 17, -38, -48, -75, 30, -45, -75, 21, 74, 54, -76, -31, -22, -88, 76, 60, -79, -78, -85, -63, 51, -2, 11, 81, 39, 65, -35, -60, -89, -84, 37, 36, -33, -75, -54, -67, 0, -54, 16, -56, 40, 21, -100, 23, 32, -37, -85, 43, -54, -49, 39, -48, 92, -36, -16, 51, 29, 15, 3, 90, 83, -70, 1, -47, 15, -19, -66, 61, 62, -16, 3, -15, -92, -21, -69, -90, -1), "Input: 83 29 -29 17 -38 -48 -75 30 -45 -75 21 74 54 -76 -31 -22 -88 76 60 -79 -78 -85 -63 51 -2 11 81 39 65 -35 -60 -89 -84 37 36 -33 -75 -54 -67 0 -54 16 -56 40 21 -100 23 32 -37 -85 43 -54 -49 39 -48 92 -36 -16 51 29 15 3 90 83 -70 1 -47 15 -19 -66 61 62 -16 3 -15 -92 -21 -69 -90 -1 \nSorted: -100 -92 -90 -89 -88 -85 -85 -84 -79 -78 -76 -75 -75 -75 -70 -69 -67 -66 -63 -60 -56 -54 -54 -54 -49 -48 -48 -47 -45 -38 -37 -36 -35 -33 -31 -29 -22 -21 -19 -16 -16 -15 -2 -1 0 1 3 3 11 15 15 16 17 21 21 23 29 29 30 32 36 37 39 39 40 43 51 51 54 60 61 62 65 74 76 81 83 83 90 92 \nMean: -11.1125\nMedian: -16.0\nMin: -100\nMax: 92\nRange: 192\n" });
		args.add(new Object[] { Arrays.asList(-96, 64, 45, 60, -33, -85, -13, 18, -58, 60, -76, 78, 16, 28, -86, 43, -45, -81, 28, -80, -57, -85, 51, 40, 66, -84, -5, 76, -76, -36, 3, 52, 85, -56, -72, 78, -98, 61, 76, 29, 59, 81, -73, -6), "Input: -96 64 45 60 -33 -85 -13 18 -58 60 -76 78 16 28 -86 43 -45 -81 28 -80 -57 -85 51 40 66 -84 -5 76 -76 -36 3 52 85 -56 -72 78 -98 61 76 29 59 81 -73 -6 \nSorted: -98 -96 -86 -85 -85 -84 -81 -80 -76 -76 -73 -72 -58 -57 -56 -45 -36 -33 -13 -6 -5 3 16 18 28 28 29 40 43 45 51 52 59 60 60 61 64 66 76 76 78 78 81 85 \nMean: -2.3636363636363638\nMedian: 9.5\nMin: -98\nMax: 85\nRange: 183\n" });
		args.add(new Object[] { Arrays.asList(7, 55, 0, 56, -6, 58, -63, 89, 90, -51, 70, 1, 61, 47, -4, 44, 84, -25, -22, 15, -90, -74, -97, -63, -45, 19, 24, -31, -18, -46, 47, -75, 38, -8, -97, 12, -10, -43, 92, -63, -1, -2, -88, 28, -1, 29, 79, -34, 99, 0, 76, -54, 64, -61, 92, -85), "Input: 7 55 0 56 -6 58 -63 89 90 -51 70 1 61 47 -4 44 84 -25 -22 15 -90 -74 -97 -63 -45 19 24 -31 -18 -46 47 -75 38 -8 -97 12 -10 -43 92 -63 -1 -2 -88 28 -1 29 79 -34 99 0 76 -54 64 -61 92 -85 \nSorted: -97 -97 -90 -88 -85 -75 -74 -63 -63 -63 -61 -54 -51 -46 -45 -43 -34 -31 -25 -22 -18 -10 -8 -6 -4 -2 -1 -1 0 0 1 7 12 15 19 24 28 29 38 44 47 47 55 56 58 61 64 70 76 79 84 89 90 92 92 99 \nMean: 2.125\nMedian: -0.5\nMin: -97\nMax: 99\nRange: 196\n" });
		args.add(new Object[] { Arrays.asList(-29, -8, -3, -81, 97, -87, 12, 45, 6, -100, -53, -58, -79, 5, 10, -67, 82, -41, -65, -25, 66, -47, -1, -5, 18, 37, 81, -88, 60, 42, 56, 7, 57, -7, 75, 0, -80, 68, -53, 96, -56, 26, 8, -49, 82, -16, 48, -80, 70, 1, -75, 65, -31, 94, 10, 90, 88, 97, 74, -53, -29), "Input: -29 -8 -3 -81 97 -87 12 45 6 -100 -53 -58 -79 5 10 -67 82 -41 -65 -25 66 -47 -1 -5 18 37 81 -88 60 42 56 7 57 -7 75 0 -80 68 -53 96 -56 26 8 -49 82 -16 48 -80 70 1 -75 65 -31 94 10 90 88 97 74 -53 -29 \nSorted: -100 -88 -87 -81 -80 -80 -79 -75 -67 -65 -58 -56 -53 -53 -53 -49 -47 -41 -31 -29 -29 -25 -16 -8 -7 -5 -3 -1 0 1 5 6 7 8 10 10 12 18 26 37 42 45 48 56 57 60 65 66 68 70 74 75 81 82 82 88 90 94 96 97 97 \nMean: 5.032786885245901\nMedian: 5.0\nMin: -100\nMax: 97\nRange: 197\n" });
		args.add(new Object[] { Arrays.asList(37, -42, -55, -26, 23, -36, 59, -84, 71, -12, -72, 30, -47, 77, 37, -39, -24, 92, -98, -62, -52, 25, 22, -94, -37), "Input: 37 -42 -55 -26 23 -36 59 -84 71 -12 -72 30 -47 77 37 -39 -24 92 -98 -62 -52 25 22 -94 -37 \nSorted: -98 -94 -84 -72 -62 -55 -52 -47 -42 -39 -37 -36 -26 -24 -12 22 23 25 30 37 37 59 71 77 92 \nMean: -12.28\nMedian: -26.0\nMin: -98\nMax: 92\nRange: 190\n" });
		args.add(new Object[] { Arrays.asList(71, 61, -56, 5, 78, -19, 21, -95, 94, 35, 37, 16, 23, -35), "Input: 71 61 -56 5 78 -19 21 -95 94 35 37 16 23 -35 \nSorted: -95 -56 -35 -19 5 16 21 23 35 37 61 71 78 94 \nMean: 16.857142857142858\nMedian: 22.0\nMin: -95\nMax: 94\nRange: 189\n" });
		args.add(new Object[] { Arrays.asList(20, 11, 19, -63, -84, 13, 44, 22, 38, -66, 37, 46, -29, -43, -79, -25, 99, 66, 13, 54, 90, -48, -6, 60, -85, -35, -43, -15, 80, -89, -37, 35, -12, -4, 70, -77, -49, 78, 77, 36, 49), "Input: 20 11 19 -63 -84 13 44 22 38 -66 37 46 -29 -43 -79 -25 99 66 13 54 90 -48 -6 60 -85 -35 -43 -15 80 -89 -37 35 -12 -4 70 -77 -49 78 77 36 49 \nSorted: -89 -85 -84 -79 -77 -66 -63 -49 -48 -43 -43 -37 -35 -29 -25 -15 -12 -6 -4 11 13 13 19 20 22 35 36 37 38 44 46 49 54 60 66 70 77 78 80 90 99 \nMean: 4.097560975609756\nMedian: 13.0\nMin: -89\nMax: 99\nRange: 188\n" });
		args.add(new Object[] { Arrays.asList(-57, 9, 10, 26, -40, -79, -91, -90, -68, -54, -43, -75, -8, 55, -40, 17, 24, 63, 64, -57, 3, 68, -40, 96, 98, -44, 52, -4, -24, -16, 81, -68, -68, -33, -13, 26, -15, 54, 77, 47, 14, -34, -53, -7, -79, 98, 4, -9, 15, -5, 84), "Input: -57 9 10 26 -40 -79 -91 -90 -68 -54 -43 -75 -8 55 -40 17 24 63 64 -57 3 68 -40 96 98 -44 52 -4 -24 -16 81 -68 -68 -33 -13 26 -15 54 77 47 14 -34 -53 -7 -79 98 4 -9 15 -5 84 \nSorted: -91 -90 -79 -79 -75 -68 -68 -68 -57 -57 -54 -53 -44 -43 -40 -40 -40 -34 -33 -24 -16 -15 -13 -9 -8 -7 -5 -4 3 4 9 10 14 15 17 24 26 26 47 52 54 55 63 64 68 77 81 84 96 98 98 \nMean: -2.5294117647058822\nMedian: -7.0\nMin: -91\nMax: 98\nRange: 189\n" });
		return args;
	}
}
